{"version":3,"sources":["Firebase.js","components/KeysNew.js","pages/Keys.js","components/KeyList.js","pages/Codes.js","components/School.js","components/SchoolNew.js","components/SchoolList.js","components/Navbar.js","components/Layout.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","KeysNew","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","form","objectSpread","state","defineProperty","target","name","value","schoolName","schools","filter","x","id","schoolId","onSubmit","preventDefault","_loop","index","key","create_UUID","self","assertThisInitialized","database","ref","child","concat","set","grade","group","school","status","error","console","log","addKey","keys","dt","Date","getTime","replace","c","r","Math","random","floor","toString","newArray","slice","push","react_default","a","createElement","className","scope","map","type","onChange","placeholder","table","React","Component","Keys","schoolsRef","_this2","on","snapshot","newState","val","components_KeysNew","KeyList","Codes","keysRef","codes","components_KeyList","Schools","SchoolNew","newSchoolId","update","SchoolList","components_SchoolNew","School","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","Layout","Fragment","Navbar","children","App","components_Layout","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3688b0c2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/database'\n\nconst config = {\n    apiKey: \"AIzaSyA6Qkv6hfOoTdlZhd-Cys4ZsTCXVTAz5xc\",\n    authDomain: \"creatinkersunity.firebaseapp.com\",\n    databaseURL: \"https://creatinkersunity.firebaseio.com\",\n    projectId: \"creatinkersunity\",\n    storageBucket: \"creatinkersunity.appspot.com\",\n    messagingSenderId: \"564214147615\",\n    appId: \"1:564214147615:web:7ebbd819993b8af7\"\n}\n\nfirebase.initializeApp(config)\n\nexport default firebase","import React from 'react'\nimport firebase from '../Firebase';\n\nclass KeysNew extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            keys: [],\n            form: {}\n        };\n    }\n\n    handleChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    schoolName = () => this.props.schools.filter(x => x.id === this.state.form.schoolId)[0].name\n\n    create_UUID(){\n        var dt = new Date().getTime();\n        var uuid = 'xxxxxyxx'.replace(/[xy]/g, function(c) {\n            var r = (dt + Math.random()*16)%16 | 0;\n            dt = Math.floor(dt/16);\n            return (c === 'x' ? r :(r &0x3|0x8)).toString(16);\n        });\n        return uuid;\n    }\n    onSubmit = e => {\n        e.preventDefault();\n        \n        for (let index = 0; index < this.state.form.keys; index++) {\n            const key = this.create_UUID()\n            const self = this\n            firebase.database().ref('keys').child(`${key}`).set({\n                grade: this.state.form.grade,\n                group: this.state.form.group,\n                school: this.schoolName(),\n                schoolId: this.state.form.schoolId,\n                status: 'pending'\n            }, function(error) {\n                if (error) {\n                    console.log(error)\n                } else {\n                    self.addKey(key)\n                }\n          })\n        }\n    }\n\n    addKey(key){\n        var newArray = this.state.keys.slice()\n        newArray.push(key);   \n        this.setState({keys: newArray})\n    }\n\n    table(){\n        return (\n            <table className=\"table SchoolNew-top-space\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Key</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.state.keys.map((key) => {\n                        return (\n                            <tr>\n                                <td>{key}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n    render(){\n        return(\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <form onSubmit={this.onSubmit}>\n                        <div className=\"SchoolNew-top-space\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                value={this.state.form.grade} \n                                onChange={this.handleChange} \n                                name=\"grade\"\n                                placeholder=\"Grade\"\n                            />\n                        </div>\n                        <div className=\"SchoolNew-top-space\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                value={this.state.form.group} \n                                onChange={this.handleChange} \n                                name=\"group\"\n                                placeholder=\"Group\"\n                            />\n                        </div>\n                        <div className=\"form-group SchoolNew-top-space\">\n                            <select className=\"form-control\" onChange={this.handleChange} value={this.state.form.schoolId} name=\"schoolId\">\n                                <option>Selecciona una opción</option>\n                                { this.props.schools.map((school) => {\n                                    return <option key={school.id} value={school.id}>{school.name}</option>\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"SchoolNew-top-space\">\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={this.state.form.keys} \n                                onChange={this.handleChange} \n                                name=\"keys\"\n                                placeholder=\"Keys\"\n                            />\n                        </div>\n                    <button className=\"btn btn-outline-primary SchoolNew-top-space float-right\" type=\"submit\">Generar</button>\n                </form>\n                    </div>\n                    <div className=\"col-sm\">\n                        { this.table() }\n                    </div>\n                </div>\n            </div>\n           \n        )\n    }\n}\n\nexport default KeysNew","import React from 'react'\nimport KeysNew from '../components/KeysNew'\nimport firebase from '../Firebase'\n\nclass Keys extends React.Component {\n    constructor(props){\n        super(props)\n        this.schoolsRef = firebase.database().ref('schools')\n        this.state = {\n            keys: [],\n            schools: []\n        }\n    }\n\n    componentDidMount() {\n        this.schoolsRef.on('value', (snapshot) => {\n            let newState = []\n            let schools = snapshot.val()\n            for(let school in schools){\n                newState.push({\n                    id: school,\n                    name: schools[school].name\n                })\n            }\n            this.setState({\n                schools: newState\n            })\n        }) \n    }\n\n    render(){\n        return(\n            <KeysNew schools={this.state.schools}/>\n        )\n    }\n}\n\nexport default Keys","import React from 'react'\n\nconst KeyList = (props) => (\n    <table className=\"table SchoolNew-top-space\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th>Grade</th>\n            <th>Group</th>\n            <th>School</th>\n            <th>Key</th>\n            <th>Status</th>\n        </tr>\n    </thead>\n    <tbody>\n        { props.keys.map((key, index) => {\n            return (\n                <tr key={key.id}>\n                    <td>{index}</td>\n                    <td>{key.grade}</td>\n                    <td>{key.group}</td>\n                    <td>{key.school}</td>\n                    <td>{key.id}</td>\n                    <td>\n                        <span className={`badge ${key.status === 'pending' ? 'badge-primary' : 'badge-success'}`}>\n                            {key.status}\n                        </span>\n                    </td>\n                </tr>\n            )\n        })}\n    </tbody>\n</table>\n)\n\nexport default KeyList","import React from 'react'\nimport firebase from '../Firebase';\nimport KeyList from '../components/KeyList'\n\nclass Codes extends React.Component {\n    constructor(props){\n        super(props)\n        this.keysRef = firebase.database().ref('keys')\n        this.state = {\n            codes: []\n        }\n    }\n\n    componentDidMount(){\n        this.keysRef.on('value', (snapshot) => {\n            let newState = []\n            let keys = snapshot.val()\n            for(let key in keys){\n                newState.push({\n                    id: key,\n                    grade: keys[key].grade,\n                    group: keys[key].group,\n                    school: keys[key].school,\n                    status: keys[key].status\n                })\n            }\n            this.setState({\n                codes: newState\n            })\n        }) \n    }\n\n    render(){\n        return <KeyList keys={this.state.codes}/>\n    }\n}\n\nexport default Codes","import React from 'react'\n\nfunction Schools(props){\n    return(\n        <div className=\"card\">\n            <div className=\"card-body\">\n                { props.schoolName }\n            </div>\n        </div>\n    )\n}\n\nexport default Schools","import React from 'react'\nimport './styles/SchoolNew.css'\nimport firebase from '../Firebase';\n\nclass SchoolNew extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            form: {}\n        };\n    }\n\n    handleChange = e => {\n        this.setState({\n            form: {\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n    \n    onSubmit = e => {\n        e.preventDefault();\n        const newSchoolId = firebase.database().ref().child('schools').push().key\n        firebase.database().ref(`schools/${newSchoolId}`).update({\n            name: this.state.form.name\n          }, function(error) {\n            if (error) {\n                console.log(error)\n              // The write failed...\n            } else {\n                console.log('successfull')\n              // Data saved successfully!\n            }\n          })\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.onSubmit}>\n                <div className=\"input-group mb-3 SchoolNew-top-space\">\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"Colegio\"\n                        value={this.state.schoolName} \n                        onChange={this.handleChange} \n                        name=\"name\"\n                        placeholder=\"School Name\"\n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Agregar</button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SchoolNew","import React from 'react'\nimport School from './School'\nimport SchoolNew from './SchoolNew'\nimport firebase from '../Firebase';\n\nclass SchoolList extends React.Component {\n    constructor(props){\n        super(props)\n        this.schoolsRef = firebase.database().ref('schools')\n        this.state = {\n            schools: []\n        }\n    }\n\n\n    componentDidMount() {\n        this.schoolsRef.on('value', (snapshot) => {\n            let newState = []\n            let schools = snapshot.val()\n            for(let school in schools){\n                newState.push({\n                    name: schools[school].name\n                })\n            }\n\n            this.setState({\n                schools: newState\n            })\n        }) \n    }\n\n    render(){\n        return(\n            <div>\n                <SchoolNew/>\n                {this.state.schools.map(school => {\n                    return(\n                        <School schoolName={school.name}/>\n                    ) \n                })}\n            </div>\n        )\n    }\n}\n\nexport default SchoolList","import React from 'react'\nimport { Link } from 'react-router-dom'\nconst NavBar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        {/* <Link className=\"navbar-brand\" to=\"#\">Navbar</Link> */}\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n         <span className=\"navbar-toggler-icon\"></span>\n         </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n                <Link className=\"nav-item nav-link active\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n                <Link className=\"nav-item nav-link\" to=\"/schools\">Colegios</Link>\n                <Link className=\"nav-item nav-link\" to=\"/keys\">Keys</Link>\n            </div>\n        </div>\n    </nav>\n)\n\nexport default NavBar","import React from 'react'\nimport Navbar from './Navbar'\n\nconst Layout = (props) => (\n    <React.Fragment>\n        <Navbar />\n        <div className=\"container\">\n            {props.children}\n        </div>\n    </React.Fragment>\n)\n\nexport default Layout","import React from 'react'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Keys from '../pages/Keys'\nimport Codes from '../pages/Codes' \nimport SchoolList from '../components/SchoolList'\n\nimport Layout from './Layout'\n\nconst App = () => (\n    <BrowserRouter>\n        <Layout>\n            <Switch>\n                <Route exact path='/' component={Keys} />\n                <Route exact path='/schools' component={SchoolList} />\n                <Route exact path='/keys' component={Codes} />\n            </Switch>\n        </Layout>        \n    </BrowserRouter>\n)\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}